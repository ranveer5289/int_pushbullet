/**
 *Demandware Script Wrapper for Pushbullet API calls
 */
importPackage(dw.system);
importPackage(dw.svc);

function Pushbullet() {

	this.CLIENT_SECRET = "LCRx6qItBq3svi5JtSUI14OYwcmKjO1K";
	this.CLIENT_ID = "G6hx52Xta93eiibcti9ehYXm4ybTWaOj";
	this.PB_AUTHORIZE_URL = "https://www.pushbullet.com/authorize";
	this.REDIRECT_URI = dw.web.URLUtils.https("Pushbullet-GetAccessToken");
	this.RESPONSE_TYPE = "code";
	this.SCOPE = "everything";
	this.GRANT_TYPE = "authorization_code";
}

//TODO : Improve it
Pushbullet.prototype.getService = function (serviceType : String) : Service {

	var service : Service;
	switch (serviceType) {

	case "oauth":
		service = ServiceRegistry.get("service.http.pushbullet.oauth");
		break;
	default:
		service = ServiceRegistry.get("service.http.pushbullet");
		break;

	}
	return service;
};

Pushbullet.prototype.getOauthUrl = function () : String {

	var paramObject : Object = {
		"client_id" : this.CLIENT_ID,
		"redirect_uri" : this.REDIRECT_URI,
		"response_type" : this.RESPONSE_TYPE,
		"scope" : this.SCOPE
	}

	var paramString = Object.keys(paramObject)
		.map(function (key) {
			return key + "=" + encodeURIComponent(paramObject[key]);
		})
		.join('&');

	var url : String = this.PB_AUTHORIZE_URL.concat('?', paramString);

	return url;

};

Pushbullet.prototype.getAccessToken = function (code : String) : Result{

	var paramObject : Object = {
		"grant_type" : this.GRANT_TYPE,
		"client_id" : this.CLIENT_ID,
		"client_secret" : this.CLIENT_SECRET,
		"code" : code
	}
	var result : Result;
	service = service = this.getService("oauth"); ;
	result = this.makeServiceCall(service, paramObject);
	return result;

};

Pushbullet.prototype.retrieveDevices = function (accessToken : String) : Result {

	var service : Service;
	var result : Result;
	var paramObject : Object = {
		"accessToken" : accessToken
	}
	service = this.getService();
	result  = this.makeServiceCall(service, paramObject, "devices");
	return result;
};

Pushbullet.prototype.retrieveContacts = function (accessToken : String) : Result {

	var service : Service;
	var result : Result;
	var paramObject : Object = {
		"accessToken" : accessToken
	}
	service = this.getService();
	result  = this.makeServiceCall(service, paramObject, "contacts");
	return result;
};

Pushbullet.prototype.sendNotification = function (paramObject : Object) : Result {

	var result : Result;
	service = this.getService();
	result = this.makeServiceCall(service, paramObject, "pushes", "notification");
	return result;

};
Pushbullet.prototype.makeServiceCall = function (serviceObj : dw.svc.Service, paramObject : Object, method : String, action : String) : Result {

	var result : dw.svc.Result;

	//TODO : Need to improve below code logic
	if (method != undefined) {
		var endpointUrl : String = serviceObj.getURL();
		endpointUrl = endpointUrl + method;
		serviceObj.setURL(endpointUrl);
	}

	if (action != undefined) {
		result = serviceObj.call(paramObject, action);
	} else {
		result = serviceObj.call(paramObject);
	}

	return result;
};


Pushbullet.prototype.extend = function (target : Object, source) : Object {
	var _source : Object;
	
	if (!target) return source;
	
	for (var i = 1; i < arguments.length; i++) {
		_source = arguments[i];
		for (var prop in _source) {
			if ('object' === typeof _source[prop]) {
				target[prop] = this.extend(target[prop], _source[prop]);
			} else {
				target[prop] = _source[prop];
			}
		}
	}
	
	return target;
};
Pushbullet.prototype.handleJsonResponse = function (result : dw.svc.Result) : Object {
	var jsonString : String = "";
	if (result.ok) {
		jsonString = result.object;
	} else {
		jsonString = result.errorMessage;
	}
	var parsedJson : Object = JSON.parse(jsonString);

	return parsedJson;

}

module.exports.getInstance = function () {
	return new Pushbullet();
};
