importPackage(dw.svc);
importPackage(dw.net);
importPackage(dw.io);
importPackage(dw.util);

ServiceRegistry.configure("service.http.pushbullet.oauth", {
	createRequest : function (svc : HTTPService, args) {
		// Default request method is post
		// No need to setRequestMethod
		if (args) {

			svc.addHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
			var requestData = Object.keys(args)
				.map(function (key) {
					return key + "=" + encodeURIComponent(args[key]);
				})
				.join('&');
			return requestData;
		} else {
			return null;
		}
	},
	parseResponse : function (svc : HTTPService, client : HTTPClient) {
		return client.text;
	}
});

ServiceRegistry.configure("service.http.pushbullet", {
	createRequest : function (svc : HTTPService, args) {
		// Default request method is post
		// No need to setRequestMethod

		if (args) {
			
			var argumentsArray : Array = Array.slice(arguments);
			var actionIndex  = argumentsArray.indexOf("notification");
			
			var paramObject : Object = args;
			var headerValue : String = "Bearer ".concat(paramObject['accessToken']);
			svc.addHeader('Authorization', headerValue);
			
			if (actionIndex < 0) {
				svc.setRequestMethod("GET");
			} else {

				svc.addHeader('Content-Type', 'application/json');
				delete paramObject.accessToken;
				var requestData = JSON.stringify(paramObject);
				return requestData;
			}

		} else {
			return null;
		}
	},
	parseResponse : function (svc : HTTPService, client : HTTPClient) {
		return client.text;
	}
});
