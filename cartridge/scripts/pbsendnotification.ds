/**
 * Demandware Script File
 * To define input and output parameters, create entries of the form:
 *
 * @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
 *
 * where
 *   <paramUsageType> can be either 'input' or 'output'
 *   <paramName> can be any valid parameter name
 *   <paramDataType> identifies the type of the parameter
 *   <paramComment> is an optional comment
 *
 * For example:
 *
 * @input  CurrentHttpParameterMap : dw.web.HttpParameterMap
 * @input  accessToken : String
 * @output jsonResponse : Object
 *
 */
importPackage(dw.system);
importPackage(dw.svc);
importPackage(dw.net);
importPackage(dw.io);
importPackage(dw.util);

function execute(args : PipelineDictionary) : Number {

	var service : Service;
	var result : Result;

	var deviceId : String = args.CurrentHttpParameterMap.get('deviceId').getStringValue();
	var linkToSend : String = args.CurrentHttpParameterMap.get('linkToSend').getStringValue();
	var title : String = args.CurrentHttpParameterMap.get('title').getStringValue();
	var token : String = args.accessToken;

	var paramObject : Object = {
		"accessToken" : token,
		"device_iden" : deviceId,
		"type" : "link",
		"title" : title,
		"body" : "Look At This",
		"url" : linkToSend
	}

	service = ServiceRegistry.get("service.http.pushbullet");
	var endpointUrl : String = service.getURL();
	endpointUrl = endpointUrl + "pushes";
	service.setURL(endpointUrl);
	result = service.call(paramObject, "notification");

	var jsonString : String = "";
	if (result.ok) {
		jsonString = result.object;
	} else {
		jsonString = result.errorMessage;
	}
	var parsedJson : Object = JSON.parse(jsonString);
	args.jsonResponse = parsedJson;
	return PIPELET_NEXT;
}
