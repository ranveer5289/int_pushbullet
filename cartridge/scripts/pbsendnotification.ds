/**
 * Demandware Script File
 * To define input and output parameters, create entries of the form:
 *
 * @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
 *
 * where
 *   <paramUsageType> can be either 'input' or 'output'
 *   <paramName> can be any valid parameter name
 *   <paramDataType> identifies the type of the parameter
 *   <paramComment> is an optional comment
 *
 * For example:
 * @input  link : String
 * @input  title : String
 * @input  body : String
 * @input  pushType : String
 * @input  deviceId : String 
 * @input  email : String  
 * @input  accessToken : String
 * @output jsonResponse : Object
 *
 */
importPackage(dw.system);
importPackage(dw.svc);
importPackage(dw.net);
importPackage(dw.io);
importPackage(dw.util);

function execute(args : PipelineDictionary) : Number {

	var result : Result;

	var token : String = args.accessToken;
	var titletoSend = args.title;
	var bodyToSend  = args.body;
	
	var paramObject : Object = {
		"accessToken" : token,
		"title" 	  : titletoSend,
		"body" 		  : bodyToSend
	}
	
	
	//Distinguish between pushttype Link & Note
	if(!empty(args.link) && args.pushType.equalsIgnoreCase("link")){
		paramObject.type = args.pushType;
		paramObject.url = args.link;
	}else{
		paramObject.type = args.pushType;
	}
	
	//Distinguish between contact & device
	if(args.email){
		//If email exists it is a contact
		paramObject.email = args.email;	
	}else{
		paramObject.device_iden =!empty(args.deviceId)? args.deviceId : "";
		
	}
	
	var pushbullet : Object = require('./libpushbullet.ds').getInstance();
	result = pushbullet.sendNotification(paramObject);
	var parsedJson : Object = pushbullet.handleJsonResponse(result);
	args.jsonResponse = parsedJson;
	return PIPELET_NEXT;
}
